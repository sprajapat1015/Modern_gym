c
n
it { should belong_to(:user) }
c
params
c
n
c
n
c
get :index
c
get :index
c
n
c
n
Course.create!(class_name:"yoga", description: "india exercise hindustan jindabad", trainer_coach_id:@trainer_coach.id)
Course.create!(class_name:"yoga", description: "india exercise hindustan jindabad", trainer_coach_id:@trainer_coach)
Course.create(class_name:"yoga", description: "india exercise hindustan jindabad", trainer_coach_id:@trainer_coach)
@trainer_coach
c
Course
TrainerCoach
course
@trainer_coach
c
trainer_coach
c
TrainerCoach.last
trainer_coach
:trainer_coach
trainer_coach
c
trainer_coach1
c
TrainerCoach.last
trainer_coach
trainer_coach1
c
 it { is_expected.to have_many(:payments).dependent(:destroy) }
it { should belongs_to(:user) }
c
it { is_expected.to belong_to(:user) }
it { is_expected.to belongs_to(:user) }
it { is_expected.to have_many(:payments).dependent(:destroy) }
c
expect { membership.destroy }.to change { Payment.count }.by(-1)
payment = create(:payment, membership: membership)
let(:membership) { create(:membership) }
c
 it { should have_many(:users).through(:payments).dependent(:destroy) }
it { should have_many(:payments).dependent(:destroy) }
it { should belong_to(:user) }
c
expect(assigns(:trainer_coach)).to be_instance_of(TrainerCoach)
get :new
c
get :edit, params: {id: @trainer_coach.to_param}
n
expect(response).to be_successful
get :edit,  params: {id: @trainer_coach.to_param}
c
cc
c
 get :show, params: {id: @trainer_coach.to_param}
c
n
get :show,  params: {id: @trainer_coach.to_param}
get :show,  params: {id: @trainer_coach.to_param}~
c
get :show,  params: {id: trainer_coach.to_param}
c
expect(@trainer_coach.first_name).to be_present
expect(trainer_coach.first_name).to be_present
c
expect(trainer_coach.first_name).to be_present?
expect(trainer_coach.first_name).to be_present
expect(trainer_coach.name).to be_present
c
  expect(response).to be_successful
 expect(response).to render_template(:index)
n
expect(response).to be_successful
get :index
c
patch :update, params:{trainer_coach:{first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}}
c
expect(trainer_coach).to be_valid?
expect(trainer_coach).to be_valid?\
expect(trainer_coach).to be_valid
 expect(trainer_coach).to be_valid?
 expect(trainer_coach).to be_valid
@trainer_coach = build(:trainer_coach, first_name: nil)
c
 @trainer_coach = TrainerCoach.create(:user, first_name: nil)
 @trainer_coach = create(:user, first_name: nil)
 @trainer_coach = build(:user, first_name: nil)
 trainer_coach = build(:user, first_name: nil)
c
get :index
c
@course =  @trainer_coach.courses.all
n
c
@trainer_coach.courses.all
@trainer_coach
@t@trainer_coach
c
@trainer_coach= FactoryBot.create(:trainer_coach)
n
let(:trainer_coach) { create(:trainer_coach) }
@trainer_coach
trainer_coach
c
cc
should have_many(:courses)
c
@trainer_coach
c
get :indexc
get :index
c
get :index
expect(response).to be_successful
    9:       expect(response).to be_successful
 get :index
continue
c
continue
response.should redirect_to trainer_coaches_path
response.should redirected_to trainer_coaches_path
continue
expect(response).to be_redirected
continue
expect(response).to be_redirected
expect(response).to be_successful
response.body
response
continue
TrainerCoach.count
continue
TrainerCoach.count
continue
TrainerCoach.count
TrainerCoach.all
continue
TrainerCoach.all
TrainerCoach.count
continue
TrainerCoach.count
TrainerCoach.destroy_all
TrainerCoach.count
continue
TrainerCoach.count
TrainerCoach.all
continue
TrainerCoach.all
TrainerCoach.count.all
TrainerCoach.count
expect(TrainerCoach.count).to be_eq(1)
response.body
response
continue
    post :create, params:{trainer_coach:{first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}}
c
    post :create, params:{trainer_coach:{first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}}
post :create
post "/trainer_coaches"
continue
post "/trainer_coaches"
post :create, params:{first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}
continue
TrainerCoach
@trainer_coach
User.all
User
post :create, params:{first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", trainer_coach: 1}
post :create, params:{first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", trainer_coach: "aksd"}
post :create, params:{first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", trainer_coach: nil}
post :create, params:{first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}
post :create
c
get new_trainer_coach_path
post new_trainer_coach_path
post trainer_coaches_path
post trainer_coaches_path, {first_name: "Sumit"}
get trainer_coaches_path, {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}
post trainer_coaches_path, {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}
c
post :create,params: {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}
post :create, {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}
post :post :create, {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga"}create, params: param
# post :create, {params: param}
c
post :create, :trainer_coach
post :create, {:trainer_coach}
post :create, {:trainer_coach_id}
post :create, {;trainer_coach_id}
post :create, {trainer_coach_id}
post :create, {trainer_coach_id:,  :first_name :last_name"prajapat",phone_number:"1234567890", expertise:"Yoga", user_id: 2}
post :create, {trainer_coach_id:,  :first_name,:last_name"prajapat",phone_number:"1234567890", expertise:"Yoga", user_id: 2}
post :create, {trainer_coach_id:,  :first_name,last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", user_id: 2}
post :create, {trainer_coach_id:  first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", user_id: 2}
post :create, params: {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", user_id: 2}
post :create, {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", user_id: 2}
=> 22:       post :create, {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", user_id: 2}
c
post :create, params: param
post :create, param
post :create, params
post :create, params: 
post :create, {params: param}
post :create, params: param
post :create, {params: param}
 post :create, params: {require(:trainer_coach).permit(param)}
 post :create, params: require(:trainer_coach).permit(param)
 post :create, params: params.require(:trainer_coach).permit(param)
 post :create, params: param
c
post :create, params.require(:trainer_coach).permit(param)
post :create, params: params.require(:trainer_coach).permit(param)
c
 post :create, params: {trainer_coach: param}
c
  expect(response).to be_successful
 post :create, params: param
 post :create, {params: param}
c
 post :create, {params: param{:trainer_coach}}
c
 post :create, params: param
 post :create, {params: param}
c
=> 17:       param = {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", user_id: 2}
param
c
 post :create, params: paramc
trainer_coach
 post :create, params: param
c
param = {first_name:"Sumit", last_name, :phone_number,:expertise,user_id }
param = {:first_name, :last_name, :phone_number,:expertise,:user_id }
param = params.require(:trainer_coach).permit(:first_name, :last_name, :phone_number,:expertise,:user_id )
c
@trainer_coach
@trainer-coachg
 post :create, params: param
c
\c
 post :create, params: param
 post :create, {params: param}
param = {first_name: "Sumit",last_name:"prajapat",phone_number:"1234567890", expertise:"Yoga", user_id: @trainer_coach}
c
@trainer_coach
@trainer-coach
