c
{ user_id: @user.id, membership_id: @membership.id, payment: { amount: 200, payment_date: Date.today, user_id: @user.id, membership_id: @membership.id } }
c
{ user: @user, membership: @membership, payment: { amount: 200, payment_date: Date.today, user_id: @user.id, membership_id: @membership.idc } }
params: { user: @user, membership: @membership, payment: { amount: 200, payment_date: Date.today, user_id: @user.id, membership_id: @membership.id } }
c
continue
post :create, params: {payment: { amount: 200, payment_date: Date.today, user: @user, membership: @membership }}
post :create, params: { amount: 200, payment_date: Date.today, user: @user, membership: @membership }
post :create, params: { amount: 200, payment_date: Date.today, user: @user, membership: @membership) }
response.status
c
@payment
@payment.save!
c
@payment
c
@payment
c
@payment.save!
@payment
c
@payment.save
@payment
c
@payment
c
Membership.find(1)
@payment
@payment.save!
@payment.save
c
@payment.save!
@payment.save
c
@payment.save!
@payment.save
@payment
c
@payment
@payment.save!
@payment.save
c
response.should redirect_to root_path
respose.should redirect_to root_path
response.should redirect_to users_path
response.should redirect_to user_path
post :create, params: { user_id: @user.to_param, payment: FactoryBot.attributes_for(:payment, user: @user) }
expect(response.status).to be(302)
c
post :create, params: { user_id: @user.to_param, payment: FactoryBot.attributes_for(:payment) }
c
Payment.create(payment_date: Date.today, amount: 200, user_id: @user.id)
c
expect(response).to render_template(:new)
get :new, params: { user_id: @user.id }
c
expect(assigns(:enrollment)).to be_a_new(Enrollment)
expect(assigns(:enrollment)).to be_a_new(Enrollment
c
post :create, params: { user_id: @user.to_param, enrollment: { enrollment_date: nil } }
c
post :create, params: { user_id: @user.to_param, enrollment: FactoryBot.attributes_for(:enrollment, user: @user) }
c
post :create, params: { user_id: @user.to_param, enrollment: FactoryBot.attributes_for(:enrollment, user: @user) }
c
post :create, params: { user_id: @user.to_param, enrollment: FactoryBot.attributes_for(:enrollment, user: @user) }
post :create, params: { user_id: @user.to_param, enrollment: FactoryBot.attributes_for(:enrollment, user: user) }
c
post :create, params: { user_id: @user.to_param, enrollment: FactoryBot.attributes_for(:enrollment) }
c
post :create, params: { user_id: @user.to_param, enrollment: FactoryBot.attributes_for(:enrollment) }
c
 expect(response).to redirect_to(users_path)
post :create, params: { user_id: @user.to_param, enrollment: FactoryBot.attributes_for(:enrollment) }
c
c\
c
post :create, params: { user_id: @user.to_param, enrollment: FactoryBot.attributes_for(:enrollment) }
c
get :index  ,params:{user_id: @user.id }
Enrollment.create(enrollment_date: Date.today, user_id: @user.id)
c
put :update, params: { trainer_coach: FactoryBot.attributes_for(:trainer_coach) }
c
expect(response).to render_template(:new)
expect(response).to have_http_status(:success)
expect(assigns(:membership)).to be_instance_of(Membership)
get :new, params: { user_id: @user.id }
c
to change(Membership, :count).by(1)
c
FactoryBot.create(:membership, user_id: @user.to_param)
FactoryBot.create(:membership, user_id: user.id)
FactoryBot.create(:membership, user_id: @user.id)
let(:valid_attributes) { FactoryBot.create(:membership, user_id: @user.id) }
c
 post :create, params: { user_id: @user.id, membership: valid_attributes }
 post :create, params: { user_id: @user.to_param, membership: valid_attributes }
c
post :create, params: { user_id: @user.to_param, membership: valid_attributes }
c
post :create, params: { user_id: @user.to_param, membership: valid_attributes }
c
 post :create, params: { user_id: @user.to_param, membership: Factory.attributes_for(:membership) }
 post :create, params: { user_id: user.id, membership: Factory.attributes_for(:membership) }
 post :create, params: { user_id: user.to_param, membership: Factory.attributes_for(:membership) }
 post :create, params: { user_id: user.to_param, membership: valid_attributes }
c
render json: @membership
@membership = @user.memberships
@user = User.find(params[:user_id])
c
get :index  ,params:{user_id: @user.id }
c
@user
c
@user= FactoryBot.create(:user)
@user
c
expect(response).to be_successful
get :index  ,params:{user_id: @user.id }
c
 @user= FactoryBot.create(:user)
c
user= FactoryBot.create(:user)
user= FactoryBot.create(:users)
user= FactoryBot.create(:user)
@user= FactoryBot.create(:user)
c
let(:user) { FactoryBot.create(:user) c
let(:user) { FactoryBot.create(:user) 
user
c
continue
c
continue
get user_memberships_path(User.first.id)
get user_memberships_path(1)
get user_memberships_path(User.first.id)
get :index  ,params:{user_id: User.first.id }
User.first.id
c
continue
n
User.all
continue
user
User.all
user = User.create(first_name:"Sumit", last_name: "Prajapat", phone_number:'1234567890', email:"abc@gmail.com", gender:"male",password:"111111",date_of_birth:"2023-08-03")
user
continue
@user.id
@user,id
@user
c
@user.id
c
@user.id
@user
c
@user.id
@user
@user = User.create(first_name:"Sumit", last_name: "Prajapat", phone_number:'1234567890', email:"abc@gmail.com", gender:"male",password:"111111",date_of_birth:"2023-08-03")
@user
@user.id
@user = Course.create(first_name:"Sumit", last_name: "Prajapat", phone_number:'1234567890', email:"abc@gmail.com", gender:"male",password:"111111",date_of_birth:"2023-08-03")
c
expect(response).to redirect_to(trainer_coaches_path)
response.should redirect_to trainer_coaches_path
c
 get :edit, params: {trainer_coach_id: @trainer_coach.id, id: @course.id }
@course.ids
@course.id
@course_.id
@course_.d
@course_id
@course
@course = Course.create(class_name:"yoga", description: "This is yoga class", trainer_coach_id: @trainer_coach.id)
c
@course = Course.create(class_name:"yoga", description: "This is yoga class", trainer_coach_id: @trainer_coach.id)
@course
@course.id
@course_id
@courses = Course.create(class_name:"yoga", description: "This is yoga class", trainer_coach_id: @trainer_coach.id)
@course1= FactoryBot.create(:course)
@course= FactoryBot.create(:course)
c
@trainer_coach.courses.id
@trainer_coach.courses
@trainer_coach
@trainer_coach = TrainerCoach.find(params[:trainer_coach_id])
c
get :edit, params: {trainer_coach_id: @trainer_coach.id, id: @course.to_param }
c
get :edit, params: {trainer_coach_id: @trainer_coach.id, id: @course.id }
get :edit, params: {trainer_coach_id: @trainer_coach.id, course_id: @course.id }
get :edit, params: {trainer_coach_id: @trainer_coach.id, id: @course.id }
 @courses = Course.create(class_name:"yoga", description: "This is yoga class", trainer_coach_id: @trainer_coach.id)
@course.id
@courses.id
c
 @course= FactoryBot.create(:course)
c
@course.id
course = create(:course)
c
expect(response).to render_template(:new)
expect(response).to have_http_status(:success)
expect(assigns(:course)).to be_instance_of(Course)
get :new, params: { trainer_coach_id: @trainer_coach.id }
@trainer_coach
@trainer_coach = create(:trainer_coach)
c
get :new
c
expect(response).to have_http_status(:unprocessable_entity)
expect(response).to render_template(:new)
post :create, params: {trainer_coach_id: @trainer_coach.id, course: { class_name: "" } }
c
post :create, params: { trainer_coach_id: @trainer_coach.id, course: {class_name:"yoga", description: "This is yoga class",start_time: DateTime.now,end_time: DateTime.now,capacity: 20 } }
c
expect(response.status).to be(302)
 post :create, params: { trainer_coach_id: @trainer_coach.id, course: {class_name:"yoga", description: "This is yoga class",start_time: DateTime.now,end_time: DateTime.now,capacity: 20 } }
c
response.should redirect_to trainer_coaches_path
post :create, params: { trainer_coach_id: @trainer_coach.id, course: {class_name:"yoga", description: "This is yoga class"} }
expect(response.status).to be(302)
post :create, params: { trainer_coach_id: @trainer_coach.id, course: {class_name:"yoga", description: "This is yoga class"} }
c
 expect(response).to render_template(:new)
 post :create, params: { trainer_coach: { first_name: nil } }
c
post :create, params: { trainer_coach: { first_name: nil } }
c
expect(response).to redirect_to(trainer_coaches_path)
post :create, params: { trainer_coach: FactoryBot.attributes_for(:trainer_coach) }
c
to change(TrainerCoach, :count).by(1)
post :create, params: { trainer_coach: FactoryBot.attributes_for(:trainer_coach) }
c
patch :update ,params: {trainer_coach: {first_name: "Sumit"}}
c
expect(response).to have_http_status(:unprocessable_entity)
expect(response).to render_template(:new)
c
let(:trainer_coach) { create(:trainer_coach) }
=>  5:   let(:trainer_coach) { create(:trainer_coach) }
c
get :index
c
:user.name
:user
user
c
user
